"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""               
"               
"               ██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
"               ██║   ██║██║████╗ ████║██╔══██╗██╔════╝
"               ██║   ██║██║██╔████╔██║██████╔╝██║     
"               ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║     
"                ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"                 ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
"               
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""               

" FILE PROPERTIES {{{

set nocompatible
filetype on
filetype plugin on
filetype indent on
syntax on

" }}}
" DOCUMENT VISIBILITY {{{

set number
" set cursorline
" set cursorcolumn
" }}}
" DOCUMENT VIEW {{{

set shiftwidth=2
set tabstop=2
" set expandtab
" set nobackup
set scrolloff=10
" set nowrap
set incsearch
set ignorecase
" set smartcase
set showcmd
set showmode
set showmatch
set hlsearch
set history=1000

" }}}
" WILDMENU {{{

set wildmenu
set wildmode=list:longest
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx

" }}}
" PLUGINS {{{

" call plug#begin('~/.vim/plugged')
" 	Plug 'prettier/vim-prettier', { 'do': 'yarn install --frozen-lockfile --production' }
" 	Plug 'Yggdroot/indentLine'
" call plug#end()

set listchars=tab:\|\ 
set list

" }}}
" PLUGIN SETTINGS {{{

" let g:prettier#autoformat = 0
" autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue PrettierAsync
" 
" let g:indentLine_setColors = 0
" let g:indentLine_color_term = 239
" let g:indentLine_char_list = ['|', '¦', '┆', '┊']

" }}}
" MAPPINGS {{{

" Mappings code goes here.

" }}}
" VIMSCRIPT {{{

" This will enable code folding.
" Use the marker method of folding.
augroup filetype_vim
    autocmd!
    autocmd FileType vim setlocal foldmethod=marker
augroup END

" If the current file type is HTML, set indentation to 2 spaces.
autocmd Filetype html setlocal tabstop=2 shiftwidth=2 expandtab

" If Vim version is equal to or greater than 7.3 enable undofile.
" This allows you to undo changes to a file even after saving it.
if version >= 703
    set undodir=~/.vim/backup
    set undofile
    set undoreload=10000
endif

" You can split a window into sections by typing `:split` or `:vsplit`.
" Display cursorline and cursorcolumn ONLY in active window.
augroup cursor_off
    autocmd!
    autocmd WinLeave * set cursorline cursorcolumn
    autocmd WinEnter * set nocursorline nocursorcolumn
augroup END

" If GUI version of Vim is running set these options.
if has('gui_running')

    " Set the background tone.
    set background=dark

    " Set the color scheme.
    colorscheme molokai

    " Set a custom font you have installed on your computer.
    " Syntax: set guifont=<font_name>\ <font_weight>\ <size>
    set guifont=Monospace\ Regular\ 12

    " Display more of the file by default.
    " Hide the toolbar.
    set guioptions-=T

    " Hide the the left-side scroll bar.
    set guioptions-=L

    " Hide the the right-side scroll bar.
    set guioptions-=r

    " Hide the the menu bar.
    set guioptions-=m

    " Hide the the bottom scroll bar.
    set guioptions-=b

    " Map the F4 key to toggle the menu, toolbar, and scroll bar.
    " <Bar> is the pipe character.
    " <CR> is the enter key.
    nnoremap <F4> :if &guioptions=~#'mTr'<Bar>
        \set guioptions-=mTr<Bar>
        \else<Bar>
        \set guioptions+=mTr<Bar>
        \endif<CR>

endif

" }}}
" STATUS LINE {{{

set statusline=
set statusline+=\ %F\ %M\ %Y\ %R
set statusline+=\ ascii:\ %b\ hex:\ 0x%B\ row:\ %l\ col:\ %c\ percent:\ %p%%
set laststatus=2

" }}}
" }}}

" XDG Specs {{{

set runtimepath^=/home/sizzleru/.config/vim
set runtimepath+=/home/sizzleru/.local/share/vim
set runtimepath+=/home/sizzleru/.config/vim/after

set packpath^=/home/sizzleru/.local/share/vim,/home/sizzleru/.config/vim
set packpath+=/home/sizzleru/.config/vim/after,/home/sizzleru/.local/share/vim/after

let g:netrw_home = "/home/sizzleru/.local/share/vim"
call mkdir("/home/sizzleru/.local/share/vim/spell", 'p')

set backupdir=/home/sizzleru/.local/state/vim/backup | call mkdir(&backupdir, 'p')
set directory=/home/sizzleru/.local/state/vim/swap   | call mkdir(&directory, 'p')
set undodir=/home/sizzleru/.local/state/vim/undo     | call mkdir(&undodir,   'p')
set viewdir=/home/sizzleru/.local/state/vim/view     | call mkdir(&viewdir,   'p')

if !has('nvim') | set viminfofile=/home/sizzleru/.local/state/vim/viminfo | endif

" }}}
